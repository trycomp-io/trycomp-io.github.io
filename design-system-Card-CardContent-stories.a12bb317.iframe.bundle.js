"use strict";(self.webpackChunkcomp_app=self.webpackChunkcomp_app||[]).push([[8846],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js"),console=__webpack_require__("./node_modules/console-browserify/index.js"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./components/design-system/Card/CardContent.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{IntegerEditable:()=>IntegerEditable,IntegerReadOnly:()=>IntegerReadOnly,MenuEditable:()=>MenuEditable,MenuReadOnly:()=>MenuReadOnly,MoneyAllEditable:()=>MoneyAllEditable,MoneyOnlyAmountEditable:()=>MoneyOnlyAmountEditable,MoneyReadOnly:()=>MoneyReadOnly,TextEditable:()=>TextEditable,TextReadOnly:()=>TextReadOnly,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),_root_components_design_system__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./components/design-system/index.ts"),_barrel_optimize_names_MdAttachMoney_react_icons_md__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("__barrel_optimize__?names=MdDownload!=!./node_modules/react-icons/md/index.esm.js"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),_root_lib_apiClients_core_types__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./lib/apiClients/core/types.ts"),_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@chakra-ui/toast/dist/chunk-ENIANY67.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"design-system/Cards/Parts/CardContent",component:_root_components_design_system__WEBPACK_IMPORTED_MODULE_1__.Wu,args:{},parameters:{layout:"centered"},decorators:[Story=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_root_components_design_system__WEBPACK_IMPORTED_MODULE_1__.Zp,{w:"303px",onClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.XI)("Card.onClick"),gap:"0",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_root_components_design_system__WEBPACK_IMPORTED_MODULE_1__.aR,{icon:_barrel_optimize_names_MdAttachMoney_react_icons_md__WEBPACK_IMPORTED_MODULE_5__.MdAttachMoney,tooltipLabel:"This is a random header."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_root_components_design_system__WEBPACK_IMPORTED_MODULE_1__.ZB,{title:"Read only title"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Story,{})]})]},TextReadOnly={args:{type:_root_components_design_system__WEBPACK_IMPORTED_MODULE_1__.sn.TEXT,isEditable:!1,value:"Read only value"}},TextEditable={args:{type:_root_components_design_system__WEBPACK_IMPORTED_MODULE_1__.sn.TEXT,isEditable:!0,value:"Editable"},render:function Render(args){const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_3__.useState)("Editable"),toast=(0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.d)();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_root_components_design_system__WEBPACK_IMPORTED_MODULE_1__.Wu,{...args,type:_root_components_design_system__WEBPACK_IMPORTED_MODULE_1__.sn.TEXT,value,onSubmit:function onSubmit(newValue){""===newValue?toast({description:"It's up to the dev setting the error behavior.",status:"error"}):setValue(newValue)},onChange:_=>{}})}},MoneyReadOnly={args:{type:_root_components_design_system__WEBPACK_IMPORTED_MODULE_1__.sn.MONEY,isEditable:!1,amount:1234567.89,currency:_root_lib_apiClients_core_types__WEBPACK_IMPORTED_MODULE_4__.Sj.BRL}},MoneyAllEditable={args:{type:_root_components_design_system__WEBPACK_IMPORTED_MODULE_1__.sn.MONEY,isEditable:!0,currencies:Object.values(_root_lib_apiClients_core_types__WEBPACK_IMPORTED_MODULE_4__.Sj),isCurrencyEditable:!0},render:function Render(args){const[currency,setCurrency]=(0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(_root_lib_apiClients_core_types__WEBPACK_IMPORTED_MODULE_4__.Sj.USD),[amount,setAmount]=(0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(1e3);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_root_components_design_system__WEBPACK_IMPORTED_MODULE_1__.Wu,{...args,type:_root_components_design_system__WEBPACK_IMPORTED_MODULE_1__.sn.MONEY,currency,amount,onCurrencySelected:setCurrency,onSubmit:(amount,currency)=>{setCurrency(currency),setAmount(amount)}})}},MoneyOnlyAmountEditable={args:{type:_root_components_design_system__WEBPACK_IMPORTED_MODULE_1__.sn.MONEY,isEditable:!0,currency:_root_lib_apiClients_core_types__WEBPACK_IMPORTED_MODULE_4__.Sj.BRL,isCurrencyEditable:!1},render:function Render(args){const[amount,setAmount]=(0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(1e3);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_root_components_design_system__WEBPACK_IMPORTED_MODULE_1__.Wu,{...args,type:_root_components_design_system__WEBPACK_IMPORTED_MODULE_1__.sn.MONEY,currency:_root_lib_apiClients_core_types__WEBPACK_IMPORTED_MODULE_4__.Sj.BRL,amount,onSubmit:(amount,_)=>{setAmount(amount)}})}},MenuReadOnly={args:{type:_root_components_design_system__WEBPACK_IMPORTED_MODULE_1__.sn.MENU,isEditable:!1,selectedId:0,options:[{id:0,displayName:"Option 1"}]}},MenuEditable={args:{type:_root_components_design_system__WEBPACK_IMPORTED_MODULE_1__.sn.MENU,isEditable:!0,selectedId:0,options:[{id:0,displayName:"Diário"},{id:1,displayName:"Mensal"},{id:2,displayName:"Trimestral"},{id:3,displayName:"The dev can decide what to put here"}]},render:function Render(args){const[selectedId,setSelectedId]=(0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(0);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_root_components_design_system__WEBPACK_IMPORTED_MODULE_1__.Wu,{...args,type:_root_components_design_system__WEBPACK_IMPORTED_MODULE_1__.sn.MENU,selectedId,onSelect:id=>setSelectedId(id)})}},IntegerReadOnly={args:{type:_root_components_design_system__WEBPACK_IMPORTED_MODULE_1__.sn.INTEGER,isEditable:!1,value:12,suffix:"salários"}},IntegerEditable={args:{type:_root_components_design_system__WEBPACK_IMPORTED_MODULE_1__.sn.INTEGER,isEditable:!0,value:12,suffix:"salários"},render:function Render(args){const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(12);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_root_components_design_system__WEBPACK_IMPORTED_MODULE_1__.Wu,{...args,type:_root_components_design_system__WEBPACK_IMPORTED_MODULE_1__.sn.INTEGER,value,onSubmit:setValue,onChange:_=>{}})}},__namedExportsOrder=["TextReadOnly","TextEditable","MoneyReadOnly","MoneyAllEditable","MoneyOnlyAmountEditable","MenuReadOnly","MenuEditable","IntegerReadOnly","IntegerEditable"];TextReadOnly.parameters={...TextReadOnly.parameters,docs:{...TextReadOnly.parameters?.docs,source:{originalSource:"{\n  args: {\n    type: CardContentType.TEXT,\n    isEditable: false,\n    value: 'Read only value'\n  }\n}",...TextReadOnly.parameters?.docs?.source}}},TextEditable.parameters={...TextEditable.parameters,docs:{...TextEditable.parameters?.docs,source:{originalSource:"{\n  args: {\n    type: CardContentType.TEXT,\n    isEditable: true,\n    value: 'Editable'\n  },\n  render: function Render(args) {\n    const [value, setValue] = useState<string>('Editable');\n    const toast = useToast();\n    function onSubmit(newValue: string) {\n      if (newValue !== '') {\n        setValue(newValue);\n        return;\n      }\n      toast({\n        description: \"It's up to the dev setting the error behavior.\",\n        status: 'error'\n      });\n    }\n    return <CardContent {...args} type={CardContentType.TEXT} value={value} onSubmit={onSubmit} onChange={_ => {}} />;\n  }\n}",...TextEditable.parameters?.docs?.source}}},MoneyReadOnly.parameters={...MoneyReadOnly.parameters,docs:{...MoneyReadOnly.parameters?.docs,source:{originalSource:"{\n  args: {\n    type: CardContentType.MONEY,\n    isEditable: false,\n    amount: 1234567.89,\n    currency: Currency.BRL\n  }\n}",...MoneyReadOnly.parameters?.docs?.source}}},MoneyAllEditable.parameters={...MoneyAllEditable.parameters,docs:{...MoneyAllEditable.parameters?.docs,source:{originalSource:"{\n  args: {\n    type: CardContentType.MONEY,\n    isEditable: true,\n    currencies: Object.values(Currency),\n    isCurrencyEditable: true\n  },\n  render: function Render(args) {\n    const [currency, setCurrency] = useState<Currency>(Currency.USD);\n    const [amount, setAmount] = useState<number>(1000);\n    return <CardContent {...args} type={CardContentType.MONEY} currency={currency} amount={amount} onCurrencySelected={setCurrency} onSubmit={(amount, currency) => {\n      setCurrency(currency);\n      setAmount(amount);\n    }} />;\n  }\n}",...MoneyAllEditable.parameters?.docs?.source}}},MoneyOnlyAmountEditable.parameters={...MoneyOnlyAmountEditable.parameters,docs:{...MoneyOnlyAmountEditable.parameters?.docs,source:{originalSource:"{\n  args: {\n    type: CardContentType.MONEY,\n    isEditable: true,\n    currency: Currency.BRL,\n    isCurrencyEditable: false\n  },\n  render: function Render(args) {\n    const [amount, setAmount] = useState<number>(1000);\n    return <CardContent {...args} type={CardContentType.MONEY} currency={Currency.BRL} amount={amount} onSubmit={(amount, _) => {\n      setAmount(amount);\n    }} />;\n  }\n}",...MoneyOnlyAmountEditable.parameters?.docs?.source}}},MenuReadOnly.parameters={...MenuReadOnly.parameters,docs:{...MenuReadOnly.parameters?.docs,source:{originalSource:"{\n  args: {\n    type: CardContentType.MENU,\n    isEditable: false,\n    selectedId: 0,\n    options: [{\n      id: 0,\n      displayName: 'Option 1'\n    }]\n  }\n}",...MenuReadOnly.parameters?.docs?.source}}},MenuEditable.parameters={...MenuEditable.parameters,docs:{...MenuEditable.parameters?.docs,source:{originalSource:"{\n  args: {\n    type: CardContentType.MENU,\n    isEditable: true,\n    selectedId: 0,\n    options: [{\n      id: 0,\n      displayName: 'Diário'\n    }, {\n      id: 1,\n      displayName: 'Mensal'\n    }, {\n      id: 2,\n      displayName: 'Trimestral'\n    }, {\n      id: 3,\n      displayName: 'The dev can decide what to put here'\n    }]\n  },\n  render: function Render(args) {\n    const [selectedId, setSelectedId] = useState<Key>(0);\n    return <CardContent {...args} type={CardContentType.MENU} selectedId={selectedId} onSelect={id => setSelectedId(id)} />;\n  }\n}",...MenuEditable.parameters?.docs?.source}}},IntegerReadOnly.parameters={...IntegerReadOnly.parameters,docs:{...IntegerReadOnly.parameters?.docs,source:{originalSource:"{\n  args: {\n    type: CardContentType.INTEGER,\n    isEditable: false,\n    value: 12,\n    suffix: 'salários'\n  }\n}",...IntegerReadOnly.parameters?.docs?.source}}},IntegerEditable.parameters={...IntegerEditable.parameters,docs:{...IntegerEditable.parameters?.docs,source:{originalSource:"{\n  args: {\n    type: CardContentType.INTEGER,\n    isEditable: true,\n    value: 12,\n    suffix: 'salários'\n  },\n  render: function Render(args) {\n    const [value, setValue] = useState<number>(12);\n    return <CardContent {...args} type={CardContentType.INTEGER} value={value} onSubmit={setValue} onChange={_ => {}} />;\n  }\n}",...IntegerEditable.parameters?.docs?.source}}}}}]);